{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        },
        "adminUsername": {
            "defaultValue": "weblogic",
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "adminVMName": {
            "defaultValue": "ohsVM",
            "type": "string",
            "metadata": {
                "description": "Admin Server hosting VM name."
            }
        },        
        "authenticationType":{
         "type":"string",
         "defaultValue":"password",
         "allowedValues":[
            "sshPublicKey",
            "password"
         ],
         "metadata":{
            "description":"Type of authentication to use on the Virtual Machine. SSH key is recommended."
         }
      },
      "adminPasswordOrKey":{
         "type":"securestring",
         "metadata":{
            "description":"SSH Key or password for the Virtual Machine. SSH key is recommended."
         }
      },
      "acceptOTNLicenseAgreement":{
         "type":"string",
         "metadata":{
            "description":"Do you agree to provide OTN credentials to accept OTN License Agreement? Enter Y or y to agree, else N or n"
         }
      },
      "otnAccountUsername":{
         "type":"string",
         "metadata":{
            "description":"Username for your Oracle Technology Network account"
         }
      },
      "otnAccountPassword":{
         "type":"securestring",
         "metadata":{
            "description":"Password for your Oracle Technology Network account"
         }
      },
      "dnsLabelPrefix":{
         "type":"string",
         "metadata":{
            "description":"Unique DNS Name for the Public IP used to access the Virtual Machine."
         }
      },
      "linuxOSVersion":{
         "type":"string",
         "defaultValue":"7.6",
         "allowedValues":[
            "7.6",
            "7.5",
            "7.4",
            "7.3"
         ],
         "metadata":{
            "description":"The Oracle Linux version for the VM. This will pick a fully patched image of this given Oracle Linux version."
         }
      },
      "location":{
         "type":"string",
         "defaultValue": "[resourceGroup().location]",
         "metadata":{
            "description":"Location for all resources."
         }
      },
      "vmSizeSelect":{
       "type":"string",
       "defaultValue":"Standard_A3",
       "allowedValues":[
           "Standard_A1",
           "Standard_A2",
           "Standard_A3",
           "Standard_A4"
       ],
       "metadata":{
           "description":"Select appropriate VM Size as per requirement (Standard_A1, Standard_A2, Standard_A3, Standard_A4)"
       }
     },
     "guidValue": {
        "type": "string",
         "defaultValue": "[newGuid()]"
     }         
   },
   "variables":{
   	  "name_storageAccount": "[concat(take(replace(parameters('guidValue'),'-',''),6),'olvm')]",
   	  "const_hyphen": "-",
      "const_imagePublisher":"Oracle",
      "const_imageOffer":"Oracle-Linux",
      "name_nic": "NIC",
      "const_addressPrefix": "10.0.0.0/16",
      "name_subnet": "Subnet",
      "const_subnetPrefix": "10.0.0.0/24",
      "const_storageAccountType":"Standard_LRS",
      "name_publicIPAddress": "PublicIP",
      "const_publicIPAddressType": "Dynamic",
      "const_vmSize": "[parameters('vmSizeSelect')]",
      "name_scriptFile": "setupOHS.sh",
      "name_virtualNetwork": "[concat(parameters('dnsLabelPrefix'),'_VNET')]",
      "name_networkSecurityGroup": "[concat(parameters('dnsLabelPrefix'), '-nsg')]",
      "ref_networkSecurityGroup": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('name_networkSecurityGroup'))]",
      "ref_storage": "[resourceId('Microsoft.Storage/storageAccounts', variables('name_storageAccount'))]",
      "ref_subnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('name_virtualNetwork'), variables('name_subnet'))]",
      "name_outputAdminHost": "[concat(parameters('adminVMName'),variables('name_publicIPAddress'))]",
      "const_linuxConfiguration":{
         "disablePasswordAuthentication":true,
         "ssh":{
            "publicKeys":[
               {
                  "path":"[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData":"[parameters('adminPasswordOrKey')]"
               }
            ]
         }
       }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('name_storageAccount')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('const_storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {
                "supportsHttpsTrafficOnly": false
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('adminVMName'),variables('name_publicIPAddress'))]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('const_publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(toLower(parameters('dnsLabelPrefix')),'-',take(replace(parameters('guidValue'),'-',''),10),'-',toLower(parameters('adminVMName')))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-06-01",
            "name": "[variables('name_virtualNetwork')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('const_addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('name_subnet')]",
                        "properties": {
                            "addressPrefix": "[variables('const_subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('adminVMName'),variables('name_nic'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('name_virtualNetwork')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('adminVMName'),variables('name_publicIPAddress')))]"
                            },
                            "subnet": {
                                "id": "[variables('ref_subnet')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "internalDnsNameLabel": "[parameters('adminVMName')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[parameters('adminVMName')]",
            "location": "[parameters('location')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('const_vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('adminVMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('const_linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('const_imagePublisher')]",
                        "offer": "[variables('const_imageOffer')]",
                        "sku":"[parameters('linuxOSVersion')]",
                        "version":"latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "diskSizeGB": 40,
                            "createOption":"Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('adminVMName'),variables('name_nic')))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('name_storageAccount')), '2019-06-01').primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('adminVMName'),'/newuserscript')]",
            "location": "[parameters('location')]",
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[uri(parameters('_artifactsLocationClusterTemplate'), concat('../scripts/', variables('name_scriptFile'), parameters('_artifactsLocationSasToken')))]"
                    ]
                },
                "protectedSettings": {
                   "commandToExecute": "[concat(variables('name_scriptFile'),' ',parameters('acceptOTNLicenseAgreement'),' ',parameters('otnAccountUsername'),' ',parameters('otnAccountPassword'))]"
                }
            }
        }                                    		                    
     ],
    "outputs": {
        "artifactsLocationPassedIn": {
            "type": "string",
            "value": "[parameters('_artifactsLocation')]"
        },
        "adminHostName": {
            "type": "string",
            "value": "[reference(variables('name_outputAdminHost'), '2019-11-01').dnsSettings.fqdn]"
        }             
   }   
}  